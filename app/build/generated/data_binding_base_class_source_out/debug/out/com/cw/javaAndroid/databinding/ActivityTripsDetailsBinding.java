// Generated by view binder compiler. Do not edit!
package com.cw.javaAndroid.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.cw.javaAndroid.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityTripsDetailsBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RadioButton NoEdit;

  @NonNull
  public final TextView TitleTrips;

  @NonNull
  public final TextView TripDateEdit;

  @NonNull
  public final EditText TripDescriptionEdit;

  @NonNull
  public final EditText TripDestinationEdit;

  @NonNull
  public final EditText TripNameEdit;

  @NonNull
  public final RadioButton YesEdit;

  @NonNull
  public final Button btnShowExpensesTripEdit;

  @NonNull
  public final Button btnTripEdit;

  @NonNull
  public final TextView deleteTrips;

  @NonNull
  public final RadioGroup radioGroupAssessmentEdit;

  @NonNull
  public final View view;

  private ActivityTripsDetailsBinding(@NonNull RelativeLayout rootView, @NonNull RadioButton NoEdit,
      @NonNull TextView TitleTrips, @NonNull TextView TripDateEdit,
      @NonNull EditText TripDescriptionEdit, @NonNull EditText TripDestinationEdit,
      @NonNull EditText TripNameEdit, @NonNull RadioButton YesEdit,
      @NonNull Button btnShowExpensesTripEdit, @NonNull Button btnTripEdit,
      @NonNull TextView deleteTrips, @NonNull RadioGroup radioGroupAssessmentEdit,
      @NonNull View view) {
    this.rootView = rootView;
    this.NoEdit = NoEdit;
    this.TitleTrips = TitleTrips;
    this.TripDateEdit = TripDateEdit;
    this.TripDescriptionEdit = TripDescriptionEdit;
    this.TripDestinationEdit = TripDestinationEdit;
    this.TripNameEdit = TripNameEdit;
    this.YesEdit = YesEdit;
    this.btnShowExpensesTripEdit = btnShowExpensesTripEdit;
    this.btnTripEdit = btnTripEdit;
    this.deleteTrips = deleteTrips;
    this.radioGroupAssessmentEdit = radioGroupAssessmentEdit;
    this.view = view;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityTripsDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityTripsDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_trips_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityTripsDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.No_Edit;
      RadioButton NoEdit = ViewBindings.findChildViewById(rootView, id);
      if (NoEdit == null) {
        break missingId;
      }

      id = R.id.Title_Trips;
      TextView TitleTrips = ViewBindings.findChildViewById(rootView, id);
      if (TitleTrips == null) {
        break missingId;
      }

      id = R.id.TripDate_Edit;
      TextView TripDateEdit = ViewBindings.findChildViewById(rootView, id);
      if (TripDateEdit == null) {
        break missingId;
      }

      id = R.id.TripDescription_Edit;
      EditText TripDescriptionEdit = ViewBindings.findChildViewById(rootView, id);
      if (TripDescriptionEdit == null) {
        break missingId;
      }

      id = R.id.TripDestination_Edit;
      EditText TripDestinationEdit = ViewBindings.findChildViewById(rootView, id);
      if (TripDestinationEdit == null) {
        break missingId;
      }

      id = R.id.TripName_Edit;
      EditText TripNameEdit = ViewBindings.findChildViewById(rootView, id);
      if (TripNameEdit == null) {
        break missingId;
      }

      id = R.id.Yes_Edit;
      RadioButton YesEdit = ViewBindings.findChildViewById(rootView, id);
      if (YesEdit == null) {
        break missingId;
      }

      id = R.id.btnShowExpensesTrip_Edit;
      Button btnShowExpensesTripEdit = ViewBindings.findChildViewById(rootView, id);
      if (btnShowExpensesTripEdit == null) {
        break missingId;
      }

      id = R.id.btnTrip_Edit;
      Button btnTripEdit = ViewBindings.findChildViewById(rootView, id);
      if (btnTripEdit == null) {
        break missingId;
      }

      id = R.id.delete_trips;
      TextView deleteTrips = ViewBindings.findChildViewById(rootView, id);
      if (deleteTrips == null) {
        break missingId;
      }

      id = R.id.radioGroup_Assessment_Edit;
      RadioGroup radioGroupAssessmentEdit = ViewBindings.findChildViewById(rootView, id);
      if (radioGroupAssessmentEdit == null) {
        break missingId;
      }

      id = R.id.view;
      View view = ViewBindings.findChildViewById(rootView, id);
      if (view == null) {
        break missingId;
      }

      return new ActivityTripsDetailsBinding((RelativeLayout) rootView, NoEdit, TitleTrips,
          TripDateEdit, TripDescriptionEdit, TripDestinationEdit, TripNameEdit, YesEdit,
          btnShowExpensesTripEdit, btnTripEdit, deleteTrips, radioGroupAssessmentEdit, view);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
