// Generated by view binder compiler. Do not edit!
package com.cw.javaAndroid.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.cw.javaAndroid.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogAddExpensesBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText ExpenseAmount;

  @NonNull
  public final TextView ExpenseDate;

  @NonNull
  public final Button btnAddExpense;

  @NonNull
  public final Spinner spnExpenseType;

  @NonNull
  public final TextView txtExpenseDetail;

  private DialogAddExpensesBinding(@NonNull LinearLayout rootView, @NonNull EditText ExpenseAmount,
      @NonNull TextView ExpenseDate, @NonNull Button btnAddExpense, @NonNull Spinner spnExpenseType,
      @NonNull TextView txtExpenseDetail) {
    this.rootView = rootView;
    this.ExpenseAmount = ExpenseAmount;
    this.ExpenseDate = ExpenseDate;
    this.btnAddExpense = btnAddExpense;
    this.spnExpenseType = spnExpenseType;
    this.txtExpenseDetail = txtExpenseDetail;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogAddExpensesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogAddExpensesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_add_expenses, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogAddExpensesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ExpenseAmount;
      EditText ExpenseAmount = ViewBindings.findChildViewById(rootView, id);
      if (ExpenseAmount == null) {
        break missingId;
      }

      id = R.id.ExpenseDate;
      TextView ExpenseDate = ViewBindings.findChildViewById(rootView, id);
      if (ExpenseDate == null) {
        break missingId;
      }

      id = R.id.btnAddExpense;
      Button btnAddExpense = ViewBindings.findChildViewById(rootView, id);
      if (btnAddExpense == null) {
        break missingId;
      }

      id = R.id.spnExpenseType;
      Spinner spnExpenseType = ViewBindings.findChildViewById(rootView, id);
      if (spnExpenseType == null) {
        break missingId;
      }

      id = R.id.txtExpenseDetail;
      TextView txtExpenseDetail = ViewBindings.findChildViewById(rootView, id);
      if (txtExpenseDetail == null) {
        break missingId;
      }

      return new DialogAddExpensesBinding((LinearLayout) rootView, ExpenseAmount, ExpenseDate,
          btnAddExpense, spnExpenseType, txtExpenseDetail);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
