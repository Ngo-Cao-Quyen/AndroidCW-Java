// Generated by view binder compiler. Do not edit!
package com.cw.javaAndroid.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.cw.javaAndroid.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityExpensesDetailsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText ExpenseAmountEdit;

  @NonNull
  public final TextView ExpenseDateEdit;

  @NonNull
  public final TextView TitleTrips;

  @NonNull
  public final Button btnExpenseEdit;

  @NonNull
  public final TextView deleteExpensesDetails;

  @NonNull
  public final Spinner spnExpenseTypeEdit;

  @NonNull
  public final View view;

  private ActivityExpensesDetailsBinding(@NonNull LinearLayout rootView,
      @NonNull EditText ExpenseAmountEdit, @NonNull TextView ExpenseDateEdit,
      @NonNull TextView TitleTrips, @NonNull Button btnExpenseEdit,
      @NonNull TextView deleteExpensesDetails, @NonNull Spinner spnExpenseTypeEdit,
      @NonNull View view) {
    this.rootView = rootView;
    this.ExpenseAmountEdit = ExpenseAmountEdit;
    this.ExpenseDateEdit = ExpenseDateEdit;
    this.TitleTrips = TitleTrips;
    this.btnExpenseEdit = btnExpenseEdit;
    this.deleteExpensesDetails = deleteExpensesDetails;
    this.spnExpenseTypeEdit = spnExpenseTypeEdit;
    this.view = view;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityExpensesDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityExpensesDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_expenses_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityExpensesDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ExpenseAmount_Edit;
      EditText ExpenseAmountEdit = ViewBindings.findChildViewById(rootView, id);
      if (ExpenseAmountEdit == null) {
        break missingId;
      }

      id = R.id.ExpenseDate_Edit;
      TextView ExpenseDateEdit = ViewBindings.findChildViewById(rootView, id);
      if (ExpenseDateEdit == null) {
        break missingId;
      }

      id = R.id.Title_Trips;
      TextView TitleTrips = ViewBindings.findChildViewById(rootView, id);
      if (TitleTrips == null) {
        break missingId;
      }

      id = R.id.btnExpense_Edit;
      Button btnExpenseEdit = ViewBindings.findChildViewById(rootView, id);
      if (btnExpenseEdit == null) {
        break missingId;
      }

      id = R.id.delete_Expenses_Details;
      TextView deleteExpensesDetails = ViewBindings.findChildViewById(rootView, id);
      if (deleteExpensesDetails == null) {
        break missingId;
      }

      id = R.id.spnExpenseType_Edit;
      Spinner spnExpenseTypeEdit = ViewBindings.findChildViewById(rootView, id);
      if (spnExpenseTypeEdit == null) {
        break missingId;
      }

      id = R.id.view;
      View view = ViewBindings.findChildViewById(rootView, id);
      if (view == null) {
        break missingId;
      }

      return new ActivityExpensesDetailsBinding((LinearLayout) rootView, ExpenseAmountEdit,
          ExpenseDateEdit, TitleTrips, btnExpenseEdit, deleteExpensesDetails, spnExpenseTypeEdit,
          view);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
